@use '../base' as *;
@use '../settings/variables.scss' as *;
@use '../settings/palette.scss' as *;
@use '../settings/typography.scss' as *;

@mixin button-base($padd: 1rem) {
    border: none;
    border-radius: $button-border-radius;
    cursor: pointer;
    display: inline-block;
    line-height: 1;
    outline: none;
    padding: $padd;
    text-decoration: none;
    &:disabled { //ToDo: need colour changes if button is disabled
        cursor: not-allowed;
    }
}

@mixin button-common-states($color: $text-2, $hoverColor: $text-1, $bgColor: map-get($palette, "light-gray"), $bgChange: "shade"){
    &, &:link, &:visited {
        color: $color;
        background-color: $bgColor;
        transition: color 0.2s linear, background-color 0.2s linear;
        svg {
            fill: $color;
            transition: fill 0.2s linear,
        }
        
    }
    &:hover, &:active {
        color: $hoverColor;
        svg {
            fill: $hoverColor;
        }
        @if $bgChange == "shade" {
            background-color: shade($bgColor, 15%);
        }
        @if $bgChange == "tint" {
            background-color: tint($bgColor, 85%);
        }
    }
}
@mixin button-common {
    @include button-base($button-padding);
}
@mixin button-primary {
    @include button-common-states($text-3, $text-5, map-get($palette, "primary"));
}
@mixin button-secondary {
    @include button-common-states($text-4, $text-5, map-get($palette, "secondary"));
}
@mixin button-success {
    @include button-common-states(shade(map-get($palette, "success"), 55%), $text-5, map-get($palette, "success"));
}
@mixin button-white {
    @include button-common-states($text-0, $text-1, map-get($palette, "whitest"));
}
@mixin button-sml {
    font-size: 12px;
    padding: 9px;
}
@mixin button-hollow-states($color: $text-2, $hoverColor: $text-1, $bgChange: "tint"){
    &, &:link, &:visited {
        color: $color;
        transition: color 0.2s linear, background-color 0.2s linear, border-color 0.2s linear;
        border-color: $color;
        svg {
           fill: $color;
           transition: fill 0.2s linear,
        }
    }
    &:hover, &:active {
        color: $hoverColor;
        border-color: $hoverColor;
        svg {
            fill: $hoverColor;
         }
        @if $bgChange == "tint" {
            background-color: tint($color, 85%);
        }
        @if $bgChange == "shade" {
            background-color: shade($color, 15%);
        }
    }
}
@mixin button-hollow($borderWidth: 1px) {
    @include button-base($button-padding);
    background-color: transparent;
    border-width: $borderWidth;
    border-style: solid;
}

@mixin btn-icon-base($iconSize: 14px){
    position: relative;
    padding: .6rem .75rem;
    i, span, svg {
        font-size: $iconSize;
        height: $iconSize;
        width: $iconSize;
    }
}

@mixin btn-with-icon($iconSize: 14px) {
    &.icon-right {
        @include btn-icon-base($iconSize);
        padding-right:  calc(2 * #{$iconSize});
        i, span, svg {
            position: absolute;
            right: calc(#{$iconSize} / 2);
            top: calc(50% - (#{$iconSize} / 2));
        }
    }    
    &.icon-left {
        @include btn-icon-base($iconSize);
        padding-left: calc(2 * #{$iconSize});
        
        i, span, svg {
            position: absolute;
            left: calc(#{$iconSize} / 2);
            top: calc(50% - (#{$iconSize} / 2));
        }
    } 
}

.button {
    @include button-base($button-padding);    
    &:not(.-hollow){
        @include button-common-states;
        &.primary {
            @include button-primary;
        }
        &.secondary {
            @include button-secondary;
        }
        &.success {
            @include button-success;
        }
        &.white {
            @include button-white;
        }
        &.sml {
            @include button-sml;
        }
    }
    &.-hollow {
        @include button-hollow;
        @include button-hollow-states;
        // ToDo: Need to add the other colours to hollow items
        &.-success {
            @include button-hollow-states(map-get($palette, "success"), shade(map-get($palette, "success"), 55%));
        }
    }
    @include btn-with-icon; 
}
